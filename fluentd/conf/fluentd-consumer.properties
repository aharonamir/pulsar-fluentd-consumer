# Fluentd related parameters

# Fluentd instance destinations. Default is only localhost:24224
fluentd.connect=fluentd:24224

# Fluentd client buffer configurations: https://github.com/komamitsu/fluency#buffer-configuration
#fluentd.client.buffer.chunk.initial.bytes = 1000000
#fluentd.client.buffer.chunk.retention.bytes = 2000000
#fluentd.client.buffer.max.bytes = 128000000

# Fixed event tag. Consumer sends events with fluentd.tag value to fluentd instance
#fluentd.tag=test

# Dynamic event tag with topic name. If you set "kafka.", generated event tag is "kafka.topic_name". Can't set both fluentd.tag and fluentd.tag.prefix at the same time
fluentd.tag.prefix=pulsar.

# Message format. json or regexp are supported. json is default. fluentd.record.pattern is used when use regexp format.
# Use joni, Oniguruma port for Java, for regular expression engine.
#fluentd.record.format=regexp
#fluentd.record.pattern=(?<text>.*)

# Consumed topics. Java's regex could be used like "test.*" for consuming test1, test2 ... testN topics
fluentd.consumer.topics=mcx/public/.*

# Supported patterns are "whitelist" or "blacklist". Default is "whitelist"
#fluentd.consumer.topics.pattern=blacklist

# Use parsed time instead of current time for fluentd event. fluentd.record.time.pattern is based on SimpleDateFormat: http://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html
#fluentd.record.time.field=published
#fluentd.record.time.pattern=dd/MMM/yyyy:HH:mm:ss Z

# The number of threads per consumer streams
fluentd.consumer.threads=1

# Batch size of Kafka offset commit. Default is 1000
#fluentd.consumer.batch.size=1000

# The path for backup un-flushed events during shutdown.
fluentd.consumer.backup.dir=/tmp/fluentd-consumer-backup/

# For debugging
fluentd.consumer.from.beginning=true

# Pulsar Consumer related parameters
pulsar.service.url=pulsar://pulsar:6650
#pulsar.consumer.subscription.name=


